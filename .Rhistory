library(rlabbook)
install.packages("testthat")
require(rlabbook)
rmarkdown::draft("test",template = 'entry',package = "rlabbook")
library(rlabbook)
library(rlabbook)
library(rlabbook)
library(rlabbook)
library(rlabbook)
matrix(rep("NU",96),ncol = 12)
plate<- matrix(rep("NU",96),ncol = 12)
concentrations1 <- seq(from = 0.5, to = 6, by = 0.5)
concentrations1
concentrations2 <- seq(from = 1, to = 12, by = 1)
concentrations2
plate[1,] <- paste0("aureus",concentrations1)
plate[1,]
plate[1,] <- paste0("A ",concentrations1)
plate[1,]
plate[2,]  <- paste0("A ",concentrations2)
plate[2,]
plate
propionic_acid_con <- seq(from = 0.5, to = 6, by = 0.5)
plate[8,] <- paste0("A ",propionic_acid_con)
plate[8,]
library(rlabbook)
rlabbook::plate96()
getwd()
# Metasscience {.tabset .tabset-pills}
getwd()
getwd()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(rlabbook)
library(rlabbook)
library(rlabbook)
rlabbook::
mols()
plate
devtools::load_all(".")
library(rlabbook)
rlabbook::
# Hello, world!
#
# This is an example function named 'hello'
# which prints 'Hello, world!'.
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Build and Reload Package:  'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
hello <- function() {
print("Hello, world!")
}
library(rlabbook)
rlabbook::
rlabbook::
getwd
getwd()
library(rlabbook)
library(rlabbook)
plate
plate96
plate96()
require(dplyr)
gther
gther()
gather()
?gather
??gather
require(tidyr)
gather()
library(rlabbook)
library(rlabbook)
plate96txt <- function(ts,times,folder,file,sam.dat){
dbs <- lapply(paste0(folder,ts,".txt"),extract.revelation.txt)
df<- data.frame(dbs)
require(dplyr)
require(tidyr)
data <- tidyr::gather(df,key = "T1",value = "OD")
data$OD <- as.numeric(data$OD)
data$time <- unlist(lapply(times,rep,96))
data$time <- as.POSIXct(data$time,format="%H:%M")
data$time <- (data$time - data$time[1])/3600
data$time <- as.numeric(data$time)
# data$time[(96*7+1):length(data$time)] <- data$time[(96*7+1):length(data$time)]+(60*60*24)
data$sample <-rep(sapply(1:12,paste0,LETTERS[1:8]),length(dbs))
data$row <- rep(LETTERS[1:8],length(dbs))
data$column <- rep(sapply(1:12,rep,8),length(dbs))
save(data,file = paste0(folder,file))
return(data)
}
library(rlabbook)
library(rlabbook)
library(rlabbook)
library(rlabbook)
library(rlabbook)
library(rlabbook)
rlabbook::
platemap$medium <- factor(platemap$medium,levels= platemap$medium[1:8])
plotPlateMap <- function(platemap){
platemap$medium <- factor(platemap$medium,levels= platemap$medium[1:8])
p<- ggplot(data=platemap, aes(x=Column, y=Row)) +
geom_point(data=expand.grid(seq(1, 12), seq(1, 8)), aes(x=Var1, y=Var2),
color="grey90", fill="white", shape=21, size=6) +
geom_point(aes(shape=strain, colour=medium), size=10) +
#scale_color_manual(values=c("A"="blue", "B"="red", "C"="black")) +
coord_fixed(ratio=(13/12)/(9/8), xlim=c(0.5, 12.5), ylim=c(0.5, 8.5)) +
scale_y_reverse(breaks=seq(1, 8), labels=LETTERS[1:8]) +
scale_x_continuous(breaks=seq(1, 12)) +
labs(title="Plate Layout for My Experiment") +theme_bw()
#scale_shape_manual(values=1:8)
return(p)
}
library(rlabbook)
library(rlabbook)
library(rlabbook)
library(rlabbook)
rlabbook::
library(rlabbook)
rlabbook::plotPlateMap()
library(rlabbook)
rlabbook::solution.molarity()
library(rlabbook)
rlabbook::plotPlateMap()
library(rlabbook)
?rlabbook
??rlabbook
require(rlabbook)
??rlabbook
?plotPlateMap
?rlabbook
?base
?solution.molarity
library(rlabbook)
rlabbook::extract.revelation()
rlabbook::extract.revelation
plate96 <- function(ts,times,folder,file,sam.dat){
dbs <- lapply(paste0(folder,ts,".pdf"),extract.revelation)
df<- data.frame(dbs)
data <- tidyr::gather(df,key = "T1",value = "OD")
data$OD <- as.numeric(data$OD)
data$time <- unlist(lapply(times,rep,96))
data$time <- as.POSIXct(data$time,format="%H:%M")
data$time <- (data$time - data$time[1])/3600
data$time <- as.numeric(data$time)
# data$time[(96*7+1):length(data$time)] <- data$time[(96*7+1):length(data$time)]+(60*60*24)
data$sample <-rep(sapply(1:12,paste0,LETTERS[1:8]),length(dbs))
data$row <- rep(LETTERS[1:8],length(dbs))
data$column <- rep(sapply(1:12,rep,8),length(dbs))
save(data,file = paste0(folder,file))
return(data)
}
library(rlabbook)
library(rlabbook)
multiplot()
library(rlabbook)
library(rlabbook)
library(rlabbook)
require(rlabbook)
